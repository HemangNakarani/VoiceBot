{"version":3,"sources":["components/FloatingButton/floatingbutton.module.css","components/DialogBox/dialogbox.module.css","assets/Chevron.svg","components/DialogBox/index.tsx","assets/Voice.svg","components/FloatingButton/index.tsx","components/BotInterface/index.tsx","assets/wave_animation.svg","assets/aura.gif","utils/SpeechRecognitionConfig.js","components/VoiceCommandInterface/index.tsx","utils/ApiService.ts","assets/navigator.gif","App.tsx","reportWebVitals.ts","index.tsx","App.module.css","components/VoiceCommandInterface/voicechatinterface.module.css"],"names":["module","exports","DialogBox","children","opened","toggle","className","style","onClick","src","Chevron","alt","FloatingButton","VoiceIcon","BotInterface","React","useState","state","setState","handleToggle","prevState","SpeechRecognition","window","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","recognition","speechRecognitionList","addFromString","grammars","lang","interimResults","SpeechState","getIntent","body","axios","post","then","data","message","VoiceCommandInterface","idle","speechState","setSpeechState","speechText","setSpeechText","command","a","loading","query","sessionId","intent","open","handleStateChange","newState","useEffect","Speech","onaudiostart","listening","onresult","event","last","results","length","transcript","handleCommand","onspeechend","stop","onerror","console","log","container","Waves","Aura","start","App","Navigator","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fe0b287.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"floating-button\":\"floatingbutton_floating-button__2hUaj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog-box\":\"dialogbox_dialog-box__3_skr\",\"dialog-box-body\":\"dialogbox_dialog-box-body__2pQuI\",\"dialog-box-background\":\"dialogbox_dialog-box-background__248Su\",\"close-button\":\"dialogbox_close-button__3EmI9\"};","export default __webpack_public_path__ + \"static/media/Chevron.12e8882c.svg\";","import React, { ReactElement } from \"react\";\nimport style from \"./dialogbox.module.css\";\nimport Chevron from \"../../assets/Chevron.svg\";\n\ninterface IProps {\n  children: JSX.Element | JSX.Element[];\n  opened: Boolean;\n  toggle: Function;\n}\n\nexport default function DialogBox({\n  children,\n  opened,\n  toggle,\n}: IProps): ReactElement {\n  return (\n    <>\n      {opened ? (\n        <>\n          <div className={style[\"dialog-box\"]}>\n            <div className={style[\"dialog-box-body\"]}>\n              {children}\n              <div\n                onClick={() => {\n                  toggle();\n                }}\n              >\n                <img\n                  className={style[\"close-button\"]}\n                  src={Chevron}\n                  alt=\"hide\"\n                ></img>\n              </div>\n            </div>\n          </div>\n          <div className={style[\"dialog-box-background\"]}></div>\n        </>\n      ) : null}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Voice.cd02eb0c.svg\";","import React, { ReactElement } from \"react\";\nimport style from \"./floatingbutton.module.css\";\nimport VoiceIcon from \"../../assets/Voice.svg\";\nimport Chevron from \"../../assets/Chevron.svg\";\n\ninterface IProps {\n  opened: Boolean;\n  toggle: Function;\n}\n\nexport default function FloatingButton({\n  opened,\n  toggle,\n}: IProps): ReactElement {\n  return (\n    <>\n      <div\n        className={style[\"floating-button\"]}\n        onClick={() => {\n          toggle();\n        }}\n      >\n        {opened ? (\n          <img src={Chevron} alt=\"voice-icon\" />\n        ) : (\n          <img src={VoiceIcon} alt=\"voice-icon\" />\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport DialogBox from \"../DialogBox\";\nimport FloatingButton from \"../FloatingButton\";\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n}\n\ninterface IState {\n  opened: Boolean;\n}\n\nexport default function BotInterface({ children }: Props): ReactElement {\n  const [state, setState] = React.useState<IState>({ opened: false });\n\n  const handleToggle = () => {\n    setState((prevState: IState) => {\n      return { ...prevState, opened: !prevState.opened };\n    });\n  };\n\n  return (\n    <div>\n      <DialogBox toggle={handleToggle} opened={state.opened}>\n        {children}\n      </DialogBox>\n      <FloatingButton opened={state.opened} toggle={handleToggle} />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/wave_animation.8a2228b1.svg\";","export default __webpack_public_path__ + \"static/media/aura.2df63408.gif\";","let SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\nlet SpeechGrammarList =\n  window.SpeechGrammarList || window.webkitSpeechGrammarList;\n\nlet grammar = \"#JSGF V1.0;\";\nlet recognition = new SpeechRecognition();\n\nlet speechRecognitionList = new SpeechGrammarList();\nspeechRecognitionList.addFromString(grammar, 1);\nrecognition.grammars = speechRecognitionList;\nrecognition.lang = \"en-IN\";\nrecognition.interimResults = false;\n\nexport default recognition;\n","import React, { ReactElement } from \"react\";\nimport style from \"./voicechatinterface.module.css\";\nimport Waves from \"../../assets/wave_animation.svg\";\nimport Aura from \"../../assets/aura.gif\";\nimport Speech from \"../../utils/SpeechRecognitionConfig\";\nimport { getIntent } from \"../../utils/ApiService\";\n\nenum SpeechState {\n  listening = 1,\n  idle = 2,\n  loading = 3,\n}\n\nexport default function VoiceCommandInterface(): ReactElement {\n  const [speechState, setSpeechState] = React.useState<SpeechState>(\n    SpeechState.idle\n  );\n\n  const [speechText, setSpeechText] = React.useState<String>(\"\");\n\n  async function handleCommand(command: String) {\n    setSpeechState(SpeechState.loading);\n    const intent = await getIntent({ query: command, sessionId: \"dsfaSDF\" });\n    setSpeechState(SpeechState.idle);\n    window.open(`https://${intent}.com`, \"_blank\");\n  }\n\n  function handleStateChange(newState: SpeechState) {\n    setSpeechState((prevState: SpeechState): SpeechState => {\n      return newState;\n    });\n  }\n\n  React.useEffect((): void => {\n    Speech.onaudiostart = function () {\n      setSpeechText(\". . .\");\n      handleStateChange(SpeechState.listening);\n    };\n\n    Speech.onresult = function (event: any) {\n      var last = event.results.length - 1;\n      var command: String = event.results[last][0].transcript;\n      setSpeechText(command);\n      handleCommand(command);\n    };\n\n    Speech.onspeechend = function () {\n      Speech.stop();\n      handleStateChange(SpeechState.idle);\n    };\n\n    Speech.onerror = function (event: Event) {\n      handleStateChange(SpeechState.idle);\n      console.log(event);\n    };\n  }, []);\n\n  return (\n    <div className={style.container}>\n      {speechState === SpeechState.listening ? (\n        <>\n          <h6>Tap Aura to give commands</h6>\n          <img src={Waves} alt=\"waves-gif\"></img>\n        </>\n      ) : speechState === SpeechState.loading ? null : (\n        <>\n          <h6>Tap Aura to give commands</h6>\n          <div className={style[\"aure-not-listening\"]}>\n            <img\n              src={Aura}\n              alt=\"aura-gif\"\n              onClick={(): void => {\n                Speech.start();\n              }}\n            ></img>\n          </div>\n        </>\n      )}\n      <h2>{speechText}</h2>\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from \"axios\";\n\ninterface IRequestBody {\n  query: String;\n  sessionID: String;\n}\n\nexport const getIntent: Function = (body: IRequestBody) => {\n  return axios\n    .post(\"https://demo-voicebot.herokuapp.com/chat\", body)\n    .then(({ data }: AxiosResponse) => {\n      return data.message;\n    });\n};\n","export default __webpack_public_path__ + \"static/media/navigator.8851064a.gif\";","import React from \"react\";\nimport style from \"./App.module.css\";\nimport BotInterface from \"./components/BotInterface\";\nimport VoiceCommandInterface from \"./components/VoiceCommandInterface\";\nimport Navigator from \"./assets/navigator.gif\";\n\nfunction App() {\n  return (\n    <>\n      <div className={style[\"App\"]}>\n        <img src={Navigator} alt=\"navigator-gif\"></img>\n        <div className={style.title}>Say hello to VoiceBot !</div>\n      </div>\n      <BotInterface>\n        <VoiceCommandInterface />\n      </BotInterface>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"voicechatinterface_container__1_HZl\",\"aure-not-listening\":\"voicechatinterface_aure-not-listening__3l7nZ\"};"],"sourceRoot":""}